// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  username           String
  password           String
  picture            String?
  posts              Post[]
  comments           Comment[]
  likes              Likes[]
  sender_firendship  Friendship[] @relation("sender_friendship")
  reciver_firendship Friendship[] @relation("reciver_friendship")
  created_at         DateTime     @default(now())
  updated_at         DateTime     @updatedAt
  rtHashed           String?
  @@unique([username])
}

model Post {
  id                Int    @id @default(autoincrement())
  content           String
  userId            Int    
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade , onUpdate: Cascade)
  comments          Comment[]
  likes             Likes[]
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
}

model Comment {
  id                Int      @id @default(autoincrement())
  content           String
  userId            Int      
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade , onUpdate: Cascade)
  postId            Int   
  post              Post     @relation(fields: [postId], references: [id], onDelete: Cascade , onUpdate: Cascade)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Likes {
  id                Int      @id @default(autoincrement())
  userId            Int
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade , onUpdate: Cascade)
  postId            Int
  post              Post   @relation(fields: [postId], references: [id], onDelete: Cascade , onUpdate: Cascade)

  @@unique([userId, postId])
}

model Friendship {
  id                Int      @id @default(autoincrement())
  senderId          Int
  status            FriendshipStatus @default(PENDING)
  sender            User   @relation(name: "sender_friendship", fields: [senderId], references: [id])
  reciverId         Int
  reciver           User   @relation(name: "reciver_friendship", fields: [reciverId], references: [id])

  @@unique([reciverId, senderId])
}

enum FriendshipStatus {
  ACCEPTED
  PENDING
  REJECTED
}
